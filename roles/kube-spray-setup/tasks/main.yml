- name: Install git
  package:
    name: git
    state: present

- name: Clone the Kubespray repository
  git:
    repo: https://github.com/kubernetes-incubator/kubespray.git
    dest: /tmp/kubespray
    version: master

- name: Install the required Python packages
  pip:
    name:
      - requests
      - jinja2
      - pyyaml
      - netaddr
    state: present


- name: Install requirements
  pip:
    requirements: /tmp/kubespray/requirements.txt

- name: Copy inventory directory
  ansible.builtin.command: cp -rfp /tmp/kubespray/inventory/sample /tmp/kubespray/inventory/my-cluster

- name: Install requirements
  pip:
    requirements: /tmp/kubespray/contrib/inventory_builder/requirements.txt


- name: Ensure ips.yml exists
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/ips.yml"
  delegate_to: localhost
  become: false
  register: ips_file_stat

- name: Declare IP addresses
  ansible.builtin.shell: |
    declare -a IPS
    if [ -f "{{ playbook_dir }}/ips.yml" ]; then
        # Read the ips.yml file and extract IPs
        while IFS= read -r line; do
            if [[ $line == *"IPS:"* ]]; then
                ips=$(echo "$line" | awk '{$1="";print}' | tr -d ' ' | tr -d '-' | tr -d '[' | tr -d ']')
                IFS=',' read -ra ip_array <<< "$ips"
                for ip in "${ip_array[@]}"; do
                    IPS+=("$ip")
                done
            fi
        done < "{{ playbook_dir }}/ips.yml"
        echo "IP addresses are: ${IPS[@]}"
    else
        echo "ips.yml file does not exist"
    fi
  delegate_to: localhost
  become: false
  args:
    executable: /bin/bash
  when: ips_file_stat.stat.exists





- name: Ensure the inventory directory exists
  file:
    path: /tmp/kubespray/inventory/my-cluster
    state: directory

- name: Initialize the inventory file
  ansible.builtin.shell: |
    CONFIG_FILE=/tmp/kubespray/inventory/my-cluster/hosts.yml python3 /tmp/kubespray/contrib/inventory_builder/inventory.py ${IPS[@]}
  args:
    executable: /bin/bash
    chdir: /tmp/kubespray

# - name: Execute kubespray playbook for cluster setup
#   command: ansible-playbook -i /tmp/kubespray/inventory/my-cluster/hosts.yml cluster.yml
#   args:
#     chdir: /tmp/kubespray

# - name: Create .kube directory
#   file:
#     path: "{{ ansible_env.HOME }}/.kube"
#     state: directory
#     mode: '0755'

# - name: Copy Kubernetes admin.conf to user's kube config
#   copy:
#     src: /etc/kubernetes/admin.conf
#     dest: "{{ ansible_env.HOME }}/.kube/config"
#     owner: root
#     group: root
#     mode: '0644'
#     remote_src: yes

# - name: Change ownership of kube config
#   file:
#     path: "{{ ansible_env.HOME }}/.kube/config"
#     owner: "{{ ansible_user }}"
#     group: "{{ ansible_user }}"
#     mode: '0644'
#   become: true